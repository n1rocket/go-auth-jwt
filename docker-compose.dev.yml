version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: authdb_dev
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d authdb_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025" # SMTP server
      - "8025:8025" # Web UI
    logging:
      driver: 'none' # Disable mailhog logging

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      PORT: 8080
      ENVIRONMENT: development
      DATABASE_DSN: postgres://postgres:postgres@postgres:5432/authdb_dev?sslmode=disable
      JWT_SECRET: dev-secret-key-for-testing-only
      JWT_ISSUER: auth-dev
      JWT_ACCESS_TOKEN_DURATION: 15m
      JWT_ALGORITHM: HS256
      SMTP_HOST: mailhog
      SMTP_PORT: 1025
      SMTP_USERNAME: ""
      SMTP_PASSWORD: ""
      SMTP_FROM_ADDRESS: noreply@localhost
      SMTP_FROM_NAME: Auth Service Dev
      CORS_ALLOWED_ORIGINS: http://localhost:3000,http://localhost:5173,http://localhost:8080
      CORS_ALLOWED_METHODS: GET,POST,PUT,DELETE,OPTIONS
      CORS_ALLOWED_HEADERS: Authorization,Content-Type
      CORS_ALLOW_CREDENTIALS: true
      CORS_MAX_AGE: 3600
      RATE_LIMIT_ENABLED: false
      WORKER_POOL_SIZE: 2
      WORKER_QUEUE_SIZE: 10
      APP_BASE_URL: http://localhost:8080
      FRONTEND_URL: http://localhost:3000
    depends_on:
      postgres:
        condition: service_healthy
      mailhog:
        condition: service_started
    volumes:
      - ./cmd:/app/cmd
      - ./internal:/app/internal
      - ./migrations:/app/migrations
    command: ["sh", "-c", "go run cmd/api/main.go"]

volumes:
  postgres_dev_data:
  redis_dev_data: